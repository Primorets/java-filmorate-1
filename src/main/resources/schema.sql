CREATE TABLE IF NOT EXISTS users
(
    user_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name CHARACTER VARYING(100),
    login     CHARACTER VARYING(50)  NOT NULL,
    email     CHARACTER VARYING(200) NOT NULL,
    birthday  DATE
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name    CHARACTER VARYING(200),
    description  CHARACTER VARYING(300),
    release_date DATE    NOT NULL,
    duration     INTEGER NOT NULL,
    mpa_id       INTEGER
);

CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name CHARACTER VARYING(250)
);

ALTER TABLE films
    ADD FOREIGN KEY (mpa_id) REFERENCES mpa;

CREATE TABLE IF NOT EXISTS friends
(
    user_one_id INTEGER NOT NULL
        REFERENCES users on delete cascade,
    friend_id   INTEGER NOT NULL
        REFERENCES users,
    is_accept BOOLEAN NOT NULL DEFAULT false,
        FOREIGN KEY (user_one_id)
            REFERENCES users(user_id)
            ON DELETE CASCADE
            ON UPDATE CASCADE,
        FOREIGN KEY (friend_id)
            REFERENCES users(user_id)
            ON DELETE CASCADE
            ON UPDATE CASCADE,
    PRIMARY KEY (user_one_id, friend_id)
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name CHARACTER VARYING(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  INTEGER NOT NULL
        REFERENCES films ON DELETE CASCADE,
    genre_id INTEGER NOT NULL
        REFERENCES genres,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS films_like
(
    film_id INTEGER NOT NULL
        REFERENCES films on DELETE cascade,
    user_id INTEGER NOT NULL
        REFERENCES users,
    PRIMARY KEY (film_id, user_id)
);


